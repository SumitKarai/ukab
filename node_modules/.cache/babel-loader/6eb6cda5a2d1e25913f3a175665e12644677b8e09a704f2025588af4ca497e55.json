{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashu1\\\\Desktop\\\\React\\\\ukab\\\\src\\\\components\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { db } from \"../firebase-config\";\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPost = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  useEffect(() => {\n    const fetchPost = async () => {\n      const docRef = doc(db, \"posts\", id);\n      const docSnap = await getDoc(docRef);\n      if (docSnap.exists()) {\n        const data = docSnap.data();\n        setTitle(data.title);\n        setContent(data.content);\n      } else {\n        alert(\"Post not found!\");\n        navigate(\"/\");\n      }\n    };\n    fetchPost();\n  }, [id, navigate]);\n  const handleUpdate = async e => {\n    e.preventDefault();\n    try {\n      await updateDoc(doc(db, \"posts\", id), {\n        title,\n        content\n      });\n      alert(\"Post updated successfully!\");\n      navigate(`/post/${id}`);\n    } catch (err) {\n      alert(\"Error updating post: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPost, \"8y73IitHEihMAVKSBgGa7xY29EM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","db","doc","getDoc","updateDoc","jsxDEV","_jsxDEV","EditPost","_s","id","navigate","title","setTitle","content","setContent","fetchPost","docRef","docSnap","exists","data","alert","handleUpdate","e","preventDefault","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/ashu1/Desktop/React/ukab/src/components/EditPost.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { db } from \"../firebase-config\";\r\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\r\n\r\nconst EditPost = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      const docRef = doc(db, \"posts\", id);\r\n      const docSnap = await getDoc(docRef);\r\n      if (docSnap.exists()) {\r\n        const data = docSnap.data();\r\n        setTitle(data.title);\r\n        setContent(data.content);\r\n      } else {\r\n        alert(\"Post not found!\");\r\n        navigate(\"/\");\r\n      }\r\n    };\r\n    fetchPost();\r\n  }, [id, navigate]);\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await updateDoc(doc(db, \"posts\", id), { title, content });\r\n      alert(\"Post updated successfully!\");\r\n      navigate(`/post/${id}`);\r\n    } catch (err) {\r\n      alert(\"Error updating post: \" + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>Edit Post</h1>\r\n      <form onSubmit={handleUpdate}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n        <textarea\r\n          placeholder=\"Content\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <button type=\"submit\">Update Post</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}